import org.apache.tools.ant.filters.ReplaceTokens
import groovy.json.JsonSlurper

group 'io.paul1365972.github'
version 'dev-SNAPSHOT'

task paperPaperclip(type: Exec, group: 'paper') {
    commandLine "$BASH_PATH", 'ilblu', 'jar'
}

task paperApplyPatches(type: Exec, group: 'paper') {
    commandLine "$BASH_PATH", 'ilblu', 'patch'
}

task paperBuild(type: Exec, group: 'paper') {
    commandLine "$BASH_PATH", 'ilblu', 'build'
}

task paperRebuildPatches(type: Exec, group: 'paper') {
    commandLine "$BASH_PATH", 'ilblu', 'rebuild'
}

task paperUpstream(type: Exec, group: 'paper') {
    commandLine "$BASH_PATH", 'ilblu', 'upstream'
}


subprojects {
    apply plugin: 'java'

    // TODO propertyfy
    group 'io.github.paul1365972'
    version '1.15.2-R0.1-SNAPSHOT'

    processResources {
        filter ReplaceTokens, tokens: [FORK_NAME: FORK_NAME]
    }
}

allprojects {
    // TODO Find fix to not rely on rootProject as it may change
    task parseBuildData() {
        ext.mcver = ""
        def buildDataInfo = rootProject.file("./Paper/work/BuildData/info.json")
        inputs.file buildDataInfo
        doLast {
            ext.mcver = new JsonSlurper().parse(buildDataInfo)['minecraftVersion']
        }
    }

    task gitDescribeFork(type: Exec) {
        commandLine "$GIT_PATH", 'rev-parse', '--short', '--always', 'HEAD'
        workingDir rootProject.projectDir
        standardOutput = new ByteArrayOutputStream()
        ext.output = { return standardOutput.toString().strip() }
    }
}
